#!/bin/sh
####    initialize ####
# path of test data

path=${1:-~/test_data}

# file to execute

submission=${2:-~/run.in}
# echo Path $path Sub $submission

# Limits in
## ms
time_limit=2000;
## kB
memory_limit=256000
## sec
time_out_value=2.5


####               ####

accnt=0
tlecnt=0
recnt=0
RED='\033[0;31m'
GREEN='\033[1;32m'
YEL='\033[1;33m'
BLUE='\033[1;34m'
DEF='\033[0m'
testcnt=0
total_time=0
ulimit -S -s $memory_limit -v $memory_limit
# cnt normal
printf "\nResult ------------------------------\n"
echo ""
# Run testcases
for (( i = 1;; ++i))
do
	if [ ! -f $path/$i.in ];
	then
		break;
	fi
	((++testcnt))
	printf "${DEF}Test Data %3d ---------- " $i
	start_t=$(date +%s%N)
	ERR=$(bash -c "timeout --foreground $time_out_value $submission<$path/$i.in>$path/tmp.out" 2>&1)
	tostatus=$?
	end_t=$(date +%s%N)
	time_elapsed=$((($end_t - $start_t) / 1000000))
	verdict=$(diff "$path/tmp.out" "$path/$i.out")
	if [ "$ERR" != "" ]
	then 
		echo -e "${YEL}RE \c"
		((++recnt))
	elif [ $tostatus -eq 124 ]
	then
		echo -e "${BLUE}TLE ∞"
		((++tlecnt))
	elif [ $time_elapsed -gt $time_limit ]
	then
		echo -e "${BLUE}TLE\c"
		((++tlecnt))
	else
		if [ "$verdict" != "" ]
		then
			echo -e "${RED}WA \c"
		else
			echo -e "${GREEN}AC \c"
			((++accnt))
		fi
	fi
	printf "%6d ms\n" $time_elapsed
	((total_time += time_elapsed))
done
# Get the verdicts
echo ""
rm "$path/tmp.out"
if [ $accnt == $testcnt ]
then
	echo -e "${GREEN}AC $accnt / $testcnt\c"
elif [ $recnt != 0 ]
then
	echo -e "${YEL}RE ${GREEN}$accnt${YEL} / $testcnt\c"
elif [ $tlecnt != 0 ]
then
	echo -e "${BLUE}TLE ${GREEN}$accnt${BLUE} / $testcnt\c"
else
	echo -e "${RED}WA  ${GREEN}$accnt${RED} / $testcnt\c"
fi
if [ $tlecnt != 0 ]
then echo "     Total Run Time : ∞"
else
echo "     Total Run Time : $total_time ms"
fi
echo -e $DEF
exit $(($accnt * 100 / $testcnt))
